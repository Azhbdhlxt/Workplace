C51 COMPILER V9.00   MAIN                                                                  06/21/2020 10:27:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************
   2          * 【作    者】：        清翔电子:向量
   3          * 【版    本】：        V1.0
   4          * 【网    站】：        http://www.qxmcu.com/ 
   5          * 【淘宝店铺】：        http://qxmcu.taobao.com/
   6          * 【实验平台】：        清翔 QX-MCS51 单片机开发板
   7          * 【外部晶振】：        11.0592mhz      
   8          * 【主控芯片】：        STC89C52
   9          * 【编译环境】：        Keil μVisio4   
  10          * 【程序功能】：        IIC通信，AT24C02读写数据，数码管显示数据。                                                                          
  11          * 【使用说明】： 
  12          **********************************************************************************/
  13          #include <reg52.h>
  14          #include <intrins.h>
  15          
  16          #define uint unsigned int
  17          #define uchar unsigned char
  18          #define At24c02ADDR 0XA0   //AT24C02硬件地址
  19          #define I2cRead 1                  //I2C读方向位
  20          #define I2cWrite 0                 //I2C写方向位
  21          
  22          sbit DU = P2^6;//数码管段选
  23          sbit WE = P2^7;//数码管段选
  24          sbit SCL = P2^1;//I2C时钟总线
  25          sbit SDA = P2^0;//I2C数据总线
  26          uchar num;//数码管显示的值
  27          bit AckFlag;//应答标志位
  28          
  29          //共阴数码管段选表0-9
  30          uchar code SMGduan[]= {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F,};
  31          //数码管位选码
  32          uchar code SMGwei[] = {0xfe, 0xfd, 0xfb};
  33          
  34          /*====================================
  35          函数    ： delay(uint z)
  36          参数    ：z 延时毫秒设定，取值范围0-65535
  37          返回值  ：无
  38          描述    ：12T/Fosc11.0592M毫秒级延时
  39          ====================================*/
  40          void delay(uint z)
  41          {
  42   1              uint x,y;
  43   1              for(x = z; x > 0; x--)
  44   1                      for(y = 114; y > 0 ; y--);              
  45   1      } 
  46          
  47          /*====================================
  48          函数    ：display(uchar i)
  49          参数    ：i 显示数值，取值范围0-255
  50          返回值  ：无
  51          描述    ：三位共阴数码管动态显示
  52          ====================================*/
  53          void display(uchar i)
  54          {
  55   1              static uchar wei;               
C51 COMPILER V9.00   MAIN                                                                  06/21/2020 10:27:55 PAGE 2   

  56   1              P0 = 0XFF;//清除断码
  57   1              WE = 1;//打开位选锁存器
  58   1              P0 = SMGwei[wei];
  59   1              WE = 0;//锁存位选数据
  60   1              switch(wei)
  61   1              {
  62   2                      case 0: DU = 1; P0 = SMGduan[i / 100]; DU = 0; break;
  63   2                      case 1: DU = 1; P0 = SMGduan[i % 100 / 10]; DU = 0; break;      
  64   2                      case 2: DU = 1; P0 = SMGduan[i % 10]; DU = 0; break;            
  65   2              }
  66   1              wei++;
  67   1              if(wei == 3)
  68   1                      wei = 0;
  69   1      }
  70          //定时器0初始化
  71          void timer0Init()
  72          {
  73   1              EA = 1; //打开总中断
  74   1              ET0 = 1;//打开定时器0中断
  75   1              TR0 = 1;         //启动定时器0
  76   1              TMOD |= 0X01; //定时器工作模式1，16位定时模式
  77   1              TH0 = 0xED;
  78   1              TL0 = 0xFF; //定时5ms
  79   1      }
  80          /****************************************************
  81          IIC通信代码
  82          ****************************************************/
  83          
  84          /*====================================
  85          函数    ：delay5us()
  86          参数    ：无
  87          返回值  ：无
  88          描述    ：5us延时函数
  89          ====================================*/
  90          void delay5us()
  91          {
  92   1              _nop_();
  93   1      }
  94          
  95          /*====================================
  96          函数    ：I2cStart()
  97          参数    ：无
  98          返回值  ：无
  99          描述    ：I2C总线起始信号
 100          ====================================*/
 101          void I2cStart()
 102          {
 103   1      //时钟总线为高电平期间数据总线又高变低产生起始型号
 104   1              SCL = 1; 
 105   1              SDA = 1;
 106   1              delay5us();//状态保持5us
 107   1              SDA = 0;
 108   1              delay5us();//状态保持5us 
 109   1      }
 110          
 111          /*====================================
 112          函数    ：I2cStop()
 113          参数    ：无
 114          返回值  ：无
 115          描述    ：I2C总线停止信号
 116          ====================================*/
 117          void I2cStop()
C51 COMPILER V9.00   MAIN                                                                  06/21/2020 10:27:55 PAGE 3   

 118          {
 119   1      //时钟总线为高电平期间，数据总线从高变低产生终止信号
 120   1              SCL = 0;
 121   1              SDA = 0;
 122   1              SCL = 1;
 123   1              delay5us();//状态保持5us
 124   1              SDA = 1;
 125   1              delay5us();//状态保持5us        
 126   1      }
 127          
 128          /*====================================
 129          函数    ：ReadACK()
 130          参数    ：无
 131          返回值  ：1非应答，0应答
 132          描述    ：I2C总线读从机应答信号
 133          ====================================*/
 134          bit ReadACK()
 135          {
 136   1              SCL = 0;//拉低时钟总线，允许从机控制SDA
 137   1              SCL = 1;//拉高，读SDA
 138   1              delay5us();
 139   1              if(SDA)//NOACK
 140   1              {
 141   2                      SCL = 0;
 142   2                      return(1);//返回1
 143   2              }
 144   1              else//ACK
 145   1              {
 146   2                      SCL = 0;
 147   2                      return(0);//返回0
 148   2              }
 149   1      }
 150          
 151          /*====================================
 152          函数    ：SendACK(bit i)
 153          参数    ：1主机发送非应答，0发送应答
 154          返回值  ：无
 155          描述    ：主机发送应答信号
 156          ====================================*/
 157          void SendACK(bit i)
 158          {
 159   1              SCL = 0;//拉低时钟总线，允许主机控制SDA
 160   1              if(i)   //发非应答
 161   1                      SDA = 1;
 162   1              else    //发应答
 163   1                      SDA = 0;
 164   1              SCL = 1;  //拉高总线，让从机读SDA
 165   1              delay5us();//保持5us
 166   1              SCL = 0; //拉低时钟总线，允许SDA释放
 167   1              SDA = 1;//释放数据总线
 168   1      }
 169          
 170          /*====================================
 171          函数    ：I2cSendByte(uchar DAT)
 172          参数    ：DAT需要发送的数据
 173          返回值  ：无
 174          描述    ：I2C发送一个字节数据
 175          ====================================*/
 176          void I2cSendByte(uchar DAT)
 177          {
 178   1              uchar i; 
 179   1              for(i=0; i<8; i++) //分别写8次，每次写1位
C51 COMPILER V9.00   MAIN                                                                  06/21/2020 10:27:55 PAGE 4   

 180   1              {
 181   2                      SCL = 0;//拉低时钟总线，允许SDA变化
 182   2                      if(DAT & 0x80)//先写数据最高位
 183   2                              SDA = 1;  //写1
 184   2                      else
 185   2                              SDA = 0;  //写0
 186   2                      SCL = 1;          //拉高时钟，让从机读SDA
 187   2                      DAT <<= 1;        //为发送下一位左移1位
 188   2              }
 189   1              SCL = 0; //拉低时钟总线，允许SDA释放
 190   1              SDA = 1;//释放数据总线
 191   1      }
 192          
 193          /*====================================
 194          函数    ：At24c02Write(uchar ADDR, DAT)
 195          参数    ：ADDR 单元地址0-255，DAT 需要输入的数据0-255
 196          返回值  ：无
 197          描述    ：At24c02指定单元写入一个字节数据
 198          ====================================*/
 199          void At24c02Write(uchar ADDR, DAT)
 200          {
 201   1              I2cStart();//I2C起始信号
 202   1              I2cSendByte(At24c02ADDR + I2cWrite);//发送器件地址加读写方向位
 203   1              if(ReadACK()) //读从机应答
 204   1                      AckFlag = 1;    //NOACK
 205   1              else
 206   1                      AckFlag = 0;    //ACK
 207   1              I2cSendByte(ADDR);//发送储存单元地址字节
 208   1              if(ReadACK())//读从机应答
 209   1                      AckFlag = 1;    //NOACK
 210   1              else
 211   1                      AckFlag = 0;    //ACK
 212   1              I2cSendByte(DAT);//发送一字节数据
 213   1              if(ReadACK())//读从机应答
 214   1                      AckFlag = 1;    //NOACK
 215   1              else
 216   1                      AckFlag = 0;    //ACK
 217   1              I2cStop();      //I2C停止信号
 218   1      }
 219          
 220          /*====================================
 221          函数    ：I2cReadByte()
 222          参数    ：无
 223          返回值  ：返回读出的一字节数据
 224          描述    ：I2C总线读一字节数据
 225          ====================================*/
 226          uchar I2cReadByte()
 227          {
 228   1              uchar i, DAT;
 229   1              for(i=0; i<8; i++)//分别读8次，每次读一位
 230   1              {
 231   2                      DAT <<= 1; //数据左移1位，准备接收一位
 232   2                      SCL = 0;   //拉低时钟总线，允许从机控制SDA变化
 233   2                      SCL = 1;   //拉高时钟总线，读取SDA上的数据
 234   2                      if(SDA)
 235   2                              DAT |= 0X01;//为1则写1，否则不行执行写1，通过左移补0
 236   2              }
 237   1              return(DAT); //返回读出的数据
 238   1      }
 239          
 240          /*====================================
 241          函数    ：At24c02Read(uchar ADDR)
C51 COMPILER V9.00   MAIN                                                                  06/21/2020 10:27:55 PAGE 5   

 242          参数    ：ADDR 单元地址 0-255
 243          返回值  ：返回指定单元的数据
 244          描述    ：读AT24C02指定单元内数据
 245          ====================================*/
 246          uchar At24c02Read(uchar ADDR)
 247          {
 248   1              uchar DAT;
 249   1              I2cStart();//I2C起始信号
 250   1              I2cSendByte(At24c02ADDR + I2cWrite);//发送器件地址加读写方向位
 251   1              if(ReadACK())//读从机应答
 252   1                      AckFlag = 1;    //NOACK
 253   1              else
 254   1                      AckFlag = 0;    //ACK
 255   1              I2cSendByte(ADDR);//I2C发送一个字节
 256   1              ReadACK();//读从机应答
 257   1              I2cStart();//再次产生I2C起始信号
 258   1              I2cSendByte(At24c02ADDR + I2cRead);//发送器件地址加读写方向位 读
 259   1              if(ReadACK())//读从机应答
 260   1                      AckFlag = 1;    //NOACK
 261   1              else
 262   1                      AckFlag = 0;    //ACK
 263   1              DAT = I2cReadByte();//读一字节
 264   1              SendACK(1);//主机发送非应答
 265   1              I2cStop(); //I2C停止信号
 266   1              return(DAT);//返回读出数据
 267   1                              
 268   1      }
 269          
 270          void main()//main函数自身会循环
 271          {       
 272   1              timer0Init();//定时器0初始化
 273   1              EA = 0;//屏蔽中断
 274   1              At24c02Write(3, 188);//给第3单元写入数据“188”
 275   1              delay(5);//延时等待AT24C02处理
 276   1              num = At24c02Read(3);//读出第3单元内数据送给显示变量
 277   1              if(AckFlag)//当从机非应答
 278   1                      P1 = 0;//亮P1所有灯
 279   1              else
 280   1                      P1 = 0XFF;//灭P1所有灯
 281   1              EA = 1;//开中断
 282   1              while(1);
 283   1      } 
 284          
 285          //定时器0中断函数
 286          void timer0() interrupt 1
 287          {
 288   1              TH0 = 0xED;
 289   1              TL0 = 0xFF; //定时5ms
 290   1              display(num); //数码管显示函数  
 291   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    431    ----
   CONSTANT SIZE    =     13    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
