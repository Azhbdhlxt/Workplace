C51 COMPILER V8.08   MAIN                                                                  02/14/2016 10:13:05 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************
   2          * 【编写时间】： 2016年02月15日
   3          * 【作    者】： 清翔电子:03
   4          * 【版    本】： 1.0
   5          * 【网    站】： http://www.qxmcu.com/ 
   6          * 【淘宝店铺】： http://qxmcu.taobao.com/ 
   7          * 【实验平台】： QX-MCS51 单片机开发板
   8          * 【外部晶振】： 11.0592mhz     
   9          * 【主控芯片】： STC89C52
  10          * 【编译环境】： Keil μVisio3  
  11          * 【程序功能】： LCD1602液晶显示DS1302时钟日历                                                                      
  12          * 【使用说明】： 试验前请用杜邦线分别把j5排针根据背面丝印相应接到P10、P11、P12
  13                                           并接上LCD1602液晶调节好对比度再下载此程序
  14                                           【此程序是DS1302工作在突发模式读写时钟日历寄存器】
  15          
  16          *  说明：免费开源，不提供源代码分析.
  17          **********************************************************************************/
  18          
  19          //调用1602显示驱动，在此文件内已包含51头文件和定义数据类型
  20          #include "LCD1602.h"
  21          /*====================================
  22           IO接口定义
  23          ====================================*/
  24          sbit TSCLK = P1^0; //时钟
  25          sbit TIO = P1^1;   //数据
  26          sbit TRST = P1^2;  //使能
  27          
  28          #define MAIN_Fosc               11059200UL      //宏定义主时钟HZ
  29          #define DS1302_W_ADDR 0xbe  //时钟突发模式寄存器写
  30          #define DS1302_R_ADDR 0xbf      //时钟突发模式寄存器读
  31          
  32          //时钟日历暂存数组，秒、分、时、日、月、周、年 初值为= 16年2月16日 周2 09:30:55
  33          uchar TimeData[7]={55, 30,9, 16, 2, 2, 16};
  34          
  35          /*=================================================
  36          *函数名称：Delay_Ms
  37          *函数功能：12T 51单片机自适应主时钟毫秒级延时函数
  38          *说明：需定义MAIN_Fosc（晶振主频单位HZ）
  39          *输入：ms：要延时的毫秒
  40          =================================================*/
  41          void Delay_Ms(INT16U ms)
  42          {
  43   1           INT16U i;
  44   1               do{
  45   2                    i = MAIN_Fosc / 96000; 
  46   2                        while(--i);   //96T per loop
  47   2           }while(--ms);
  48   1      }
  49          /*=================================================
  50          *函数名称：DS1302_W_Byte
  51          *函数功能：DS1302写一字节数据
  52          *输入：dat：要写入的数据
  53          =================================================*/
  54          void DS1302_W_Byte(uchar dat)
  55          {
C51 COMPILER V8.08   MAIN                                                                  02/14/2016 10:13:05 PAGE 2   

  56   1              uchar i;
  57   1              for(i = 0; i < 8; i++) //每次写1bit，写8次
  58   1              {
  59   2                      TSCLK = 0;                 //拉低时钟总线
  60   2                      TIO = dat & 0x01;  //从一字节最低位开始写
  61   2                      TSCLK = 1;                 //拉高时钟总线，DS1302把数据读走
  62   2                      dat >>= 1;                 //数据右移一位 
  63   2              }       
  64   1      }
  65          /*=================================================
  66          *函数名称：DS1302_R_Byte
  67          *函数功能：DS1302读一字节
  68          *输出：dat：读取的数据
  69          =================================================*/
  70          uchar DS1302_R_Byte()
  71          {
  72   1              uchar i, dat;
  73   1              for(i = 0; i < 8; i++)  //每次写1bit，写8次
  74   1              {
  75   2                      TSCLK = 0;                      //拉低时钟总线，DS1302把数据放到数据总线上
  76   2                      dat >>= 1;                      //数据右移一位，数据从最低位开始读 
  77   2                      if(TIO) dat |= 0x80;//读取数据
  78   2                      TSCLK = 1;                      //拉高时钟总线
  79   2              }
  80   1              return dat;                             //返回读取的数据
  81   1      }
  82          /*=================================================
  83          *函数名称：DS1302_W_DAT
  84          *函数功能：写DS1302数据一次写2个字节
  85          *说明：先写命令后写数据
  86          *调用：DS1302_W_Byte()
  87          *输入：cmd：需要写的命令 ，dat：需要些的数据
  88          =================================================*/
  89          void DS1302_W_DAT(uchar cmd, uchar dat)
  90          {
  91   1              TRST = 0;                        //拉低使能端
  92   1              TSCLK = 0;                       //拉低数据总线
  93   1              TRST = 1;                        //拉高使能端，开始写数据
  94   1              DS1302_W_Byte(cmd);      //写命令
  95   1              DS1302_W_Byte(dat);      //写数据
  96   1      }
  97          /*=================================================
  98          *函数名称：DS1302_R_DAT
  99          *函数功能：读DS1302数据
 100          *说明：先写入命令字节后读出对应数据
 101          *调用： DS1302_W_Byte();DS1302_R_Byte();
 102          *输入： cmd：需要写的命令
 103          *输出： dat：读出的数据
 104          =================================================*/
 105          /*uchar DS1302_R_DAT(uchar cmd) //此程序中未使用此函数
 106          {
 107                  uchar dat;
 108                  TRST = 0;                               //拉低使能端
 109                  TSCLK = 0;                              //拉低数据总线
 110                  TRST = 1;                               //拉高使能端，开始写数据
 111                  DS1302_W_Byte(cmd);             //写命令
 112                  dat = DS1302_R_Byte();  //读出数据
 113                  return dat;                             //返回读出数据
 114          }*/
 115          
 116          /*=================================================
 117          *函数名称：DS1302_Clear_WP
C51 COMPILER V8.08   MAIN                                                                  02/14/2016 10:13:05 PAGE 3   

 118          *函数功能：清除DS1302写保护
 119          *说明：先写入命令0x8e（写控制寄存器）接着向该寄存器写0
 120          *调用：DS1302_W_DAT()
 121          =================================================*/
 122          void DS1302_Clear_WP()
 123          {
 124   1              DS1302_W_DAT(0x8e,0x00);  //把控制寄存器WP位置0
 125   1      }
 126          /*=================================================
 127          *函数名称：DS1302_Clear_WP
 128          *函数功能：设置DS1302写保护
 129          *说明：先写入命令0x8e（写控制寄存器）接着向该寄存器写0x80
 130          *调用：DS1302_W_DAT()
 131          =================================================*/
 132          void DS1302_Set_WP()
 133          {       
 134   1              DS1302_W_DAT(0x8e,0x80); //把控制寄存器WP位置1
 135   1              TRST = 0;                                //拉低使能端
 136   1              TSCLK = 0;                               //拉低数据总线
 137   1      } 
 138          /*=================================================
 139          *函数名称：Set_DS1302_Time
 140          *函数功能：设置DS1302时钟日历数据
 141          *说明：把时钟日历暂存数组TimeData数据转换为BCD码并
 142                     写入到DS1302时钟日历寄存器中
 143          *调用：DS1302_Clear_WP();DS1302_W_Byte();DS1302_Set_WP();
 144          *输入：写时钟突发模式寄存器命令DS1302_W_ADDR
 145          =================================================*/
 146          void Set_DS1302_Time()
 147          {
 148   1              uchar i, j;
 149   1              DS1302_Clear_WP();              //清除写保护
 150   1              TRST = 0;                               //拉低使能端
 151   1              TSCLK = 0;                              //拉低数据总线
 152   1              TRST = 1;                               //拉高使能端，开始写数据
 153   1              DS1302_W_Byte(DS1302_W_ADDR); //写时钟突发模式寄存器
 154   1              for(i = 0; i < 7; i++)  //写入7个字节的时钟初始值
 155   1              {
 156   2                      j = TimeData[i]/10;      //BCD码转换
 157   2                      TimeData[i] %= 10;       //BCD码转换
 158   2                      TimeData[i] += j*16; //BCD码转换
 159   2                      DS1302_W_Byte(TimeData[i]); //在突发模式下可以连续写数据
 160   2              }
 161   1              DS1302_Set_WP(); //开起写保护           
 162   1      }
 163          /*=================================================
 164          *函数名称：Read_DS1302_Time
 165          *函数功能：读取DS1302时钟数据
 166          *说明： 读取DS1302时钟数据 返回数据存入时钟日历暂存
 167                          数组TimeData（数据格式BCD码）
 168          *调用：DS1302_Clear_WP();DS1302_R_Byte();DS1302_Set_WP();
 169          *输入：写 读时钟突发模式寄存器命令DS1302_R_ADDR
 170          =================================================*/
 171          void Read_DS1302_Time()
 172          {
 173   1              uchar i;
 174   1              DS1302_Clear_WP();      //清楚些保护
 175   1              TRST = 0;                               //拉低使能端
 176   1              TSCLK = 0;                              //拉低数据总线
 177   1              TRST = 1;                               //拉高使能端，开始写数据
 178   1              DS1302_W_Byte(DS1302_R_ADDR); //写 读突发模式寄存器命令
 179   1              for(i = 0; i < 7; i++)  //从DS1302读取7个字节的时钟日历数据
C51 COMPILER V8.08   MAIN                                                                  02/14/2016 10:13:05 PAGE 4   

 180   1              {
 181   2                      TimeData[i] = DS1302_R_Byte();//在突发模式下可以连续读数据
 182   2              }
 183   1              DS1302_Set_WP();   //开起写保护
 184   1      } 
 185          /*=================================================
 186          *函数名称：main
 187          *函数功能：主函数 1602液晶显示DS1302数据
 188                             Date:年-月-日-星期
 189                             Time:时：分：秒
 190          =================================================*/
 191          void main()
 192          {
 193   1              InitLcd1602();                  //1602初始化
 194   1              Set_DS1302_Time(); //时钟突发模式写
 195   1              LcdShowStr(0,0,"Date:");  //1602显示字符串
 196   1              LcdShowStr(0,1,"Time:");  //1602显示字符串
 197   1              while(1)
 198   1              {
 199   2                      Read_DS1302_Time();//时钟突发模式读 
 200   2                      DisplayOneStr (5,0,TimeData[6]); //年
 201   2                      DisplayOneChar (7,0,'-');                //-
 202   2                      DisplayOneStr (8,0,TimeData[4]); //月
 203   2                      DisplayOneChar (10,0,'-');               //-
 204   2                      DisplayOneStr (11,0,TimeData[3]);//日
 205   2                      DisplayOneChar (13,0,'-');               //-
 206   2                      DisplayOneStr (14,0,TimeData[5]);//星期
 207   2      
 208   2                      DisplayOneStr (6,1,TimeData[2]); //时
 209   2                      DisplayOneChar (8,1,':');                //：
 210   2                      DisplayOneStr (9,1,TimeData[1]); //分
 211   2                      DisplayOneChar (11,1,':');               //：
 212   2                      DisplayOneStr (12,1,TimeData[0]);//秒
 213   2                      Delay_Ms(1000);                                  //延时1秒
 214   2              }               
 215   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    341    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
